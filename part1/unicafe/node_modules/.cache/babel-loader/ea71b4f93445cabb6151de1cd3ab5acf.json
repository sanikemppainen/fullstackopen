{"ast":null,"code":"var _jsxFileName = \"/home/ksani/fullstack22/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = b => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: b.handleClick,\n  children: b.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Stats = statsB => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: statsB.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statsB.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Stats;\n\nconst App = () => {\n  _s();\n\n  // save buttons to their own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let total = good + neutral + bad; //when clicked, check which button and change value accordingly\n\n  const handleClick = which => {\n    setIsClicked(true);\n\n    if (which = \"good\") {\n      setGood(good + 1);\n    }\n\n    if (which = \"neutral\") {\n      setNeutral(neutral + 1);\n    } else {\n      setBad(bad + 1);\n    }\n  };\n\n  const statsB = {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    total: total,\n    average: average,\n    percPos: percPos,\n    isClicked: isClicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleClick(\"good\"),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleClick(\"neutral\"),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleClick(\"bad\"),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, { ...statsB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Stats\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/ksani/fullstack22/part1/unicafe/src/App.js"],"names":["React","useState","Button","b","handleClick","text","Stats","statsB","name","value","App","good","setGood","neutral","setNeutral","bad","setBad","total","which","setIsClicked","average","percPos","isClicked"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAEC,CAAD,iBACX;AAAQ,EAAA,OAAO,EAAEA,CAAC,CAACC,WAAnB;AAAA,YACGD,CAAC,CAACE;AADL;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,M;;AAKN,MAAMI,KAAK,GAAEC,MAAD,IAAU;AACpB,sBACE;AAAA,4BACE;AAAA,gBAAIA,MAAM,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAID,MAAM,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMH,K;;AASN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AACA,MAAIgB,KAAK,GAACN,IAAI,GAACE,OAAL,GAAaE,GAAvB,CALgB,CAOhB;;AACA,QAAMX,WAAW,GAAEc,KAAD,IAAS;AACzBC,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAID,KAAK,GAAC,MAAV,EAAiB;AACfN,MAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACD;;AAAA,QAAIO,KAAK,GAAC,SAAV,EAAqB;AACpBJ,MAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AACD,KAFA,MAEM;AACLG,MAAAA,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;AACD;AACF,GAVD;;AAWA,QAAMR,MAAM,GAAC;AACXI,IAAAA,IAAI,EAACA,IADM;AAEXE,IAAAA,OAAO,EAACA,OAFG;AAGXE,IAAAA,GAAG,EAACA,GAHO;AAIXE,IAAAA,KAAK,EAACA,KAJK;AAKXG,IAAAA,OAAO,EAACA,OALG;AAMXC,IAAAA,OAAO,EAACA,OANG;AAOXC,IAAAA,SAAS,EAACA;AAPC,GAAb;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAKlB,WAAW,CAAC,MAAD,CAAjC;AAA2C,MAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAKA,WAAW,CAAC,SAAD,CAAjC;AAA8C,MAAA,IAAI,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAKA,WAAW,CAAC,KAAD,CAAjC;AAA0C,MAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD,OAAWG;AAAX;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtCD;;GAAMG,G;;MAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nconst Button=(b)=>(\n  <button onClick={b.handleClick}>\n    {b.text}\n  </button>\n)\nconst Stats=(statsB)=>{\n  return(\n    <tr>\n      <p>{statsB.name}</p>\n      <p>{statsB.value}</p>\n    </tr>\n  )\n}\n\nconst App = () => {\n  // save buttons to their own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  let total=good+neutral+bad\n  \n  //when clicked, check which button and change value accordingly\n  const handleClick=(which)=>{\n    setIsClicked(true)\n\n    if (which=\"good\"){\n      setGood(good+1)\n    }if (which=\"neutral\") {\n      setNeutral(neutral+1)\n    } else {\n      setBad(bad+1)\n    }\n  }\n  const statsB={\n    good:good,\n    neutral:neutral,\n    bad:bad,\n    total:total,\n    average:average,\n    percPos:percPos,\n    isClicked:isClicked\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button onClick={()=> handleClick(\"good\")} text=\"good\"/>\n      <Button onClick={()=> handleClick(\"neutral\")} text=\"neutral\"/>\n      <Button onClick={()=> handleClick(\"bad\")} text=\"bad\"/>\n      <Stats {...statsB} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}